apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-deployment
  namespace: road-sign-ml
  labels:
    app: mlflow
    component: tracking-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
        component: tracking-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mlflow-sa
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      containers:
        - name: mlflow
          image: python:3.10-slim
          imagePullPolicy: IfNotPresent
          
          command: ["/bin/sh"]
          args:
            - -c
            - |
              pip install mlflow[extras]==2.12.1 psycopg2-binary boto3 prometheus-client
              mlflow server \
                --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB} \
                --default-artifact-root s3://${S3_BUCKET}/mlflow-artifacts \
                --host 0.0.0.0 \
                --port 5000 \
                --serve-artifacts \
                --artifacts-destination s3://${S3_BUCKET}/mlflow-artifacts
          
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_host
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_db
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: aws_secret_access_key
            - name: S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: mlflow-config
                  key: s3_bucket
            - name: MLFLOW_S3_ENDPOINT_URL
              valueFrom:
                configMapKeyRef:
                  name: mlflow-config
                  key: s3_endpoint_url
          
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          volumeMounts:
            - name: mlflow-storage
              mountPath: /mlflow
            - name: tmp-volume
              mountPath: /tmp
      
      volumes:
        - name: mlflow-storage
          persistentVolumeClaim:
            claimName: mlflow-pvc
        - name: tmp-volume
          emptyDir: {}

---
# PostgreSQL for MLflow backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-postgres
  namespace: road-sign-ml
  labels:
    app: mlflow-postgres
    component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mlflow-postgres
  template:
    metadata:
      labels:
        app: mlflow-postgres
        component: database
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      
      containers:
        - name: postgres
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlflow-secrets
                  key: postgres_password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - $(POSTGRES_USER)
                - -d
                - $(POSTGRES_DB)
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - $(POSTGRES_USER)
                - -d
                - $(POSTGRES_DB)
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: mlflow-postgres-pvc
