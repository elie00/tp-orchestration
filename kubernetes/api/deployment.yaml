apiVersion: apps/v1
kind: Deployment
metadata:
  name: road-sign-api
  namespace: road-sign-ml
  labels:
    app: road-sign-api
    component: api
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: road-sign-api
  template:
    metadata:
      labels:
        app: road-sign-api
        component: api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: road-sign-api-sa
      
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Image Pull Secrets
      imagePullSecrets:
        - name: dockerhub-secret
      
      containers:
        - name: api
          image: eybo/road-sign-api:latest
          imagePullPolicy: Always
          
          # Security Context for container
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          
          # Environment Variables
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: MLFLOW_TRACKING_URI
              valueFrom:
                configMapKeyRef:
                  name: road-sign-config
                  key: mlflow_tracking_uri
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: road-sign-secrets
                  key: database_url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: road-sign-secrets
                  key: redis_url
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: road-sign-secrets
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: road-sign-secrets
                  key: aws_secret_access_key
          
          # Resource Limits and Requests
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          
          # Health Checks
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          
          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          
          # Volume Mounts
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: logs-volume
              mountPath: /app/logs
            - name: models-volume
              mountPath: /app/models
              readOnly: true
            - name: config-volume
              mountPath: /app/config
              readOnly: true
        
        # Sidecar for log shipping
        - name: log-shipper
          image: fluent/fluent-bit:2.1.4
          imagePullPolicy: IfNotPresent
          
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          
          volumeMounts:
            - name: logs-volume
              mountPath: /logs
              readOnly: true
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
      
      # Volumes
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: logs-volume
          emptyDir: {}
        - name: models-volume
          persistentVolumeClaim:
            claimName: models-pvc
        - name: config-volume
          configMap:
            name: road-sign-config
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
      
      # Node Affinity and Anti-Affinity
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - road-sign-api
                topologyKey: kubernetes.io/hostname
        
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                      - compute-optimized
      
      # Tolerations
      tolerations:
        - key: "high-memory"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      
      # Topology Spread Constraints
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: road-sign-api
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: road-sign-api
      
      # DNS Configuration
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0
      
      # Termination Grace Period
      terminationGracePeriodSeconds: 30
