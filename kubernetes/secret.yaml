# Template for secrets - DO NOT commit actual secrets to git
# Use this template to create your secrets in your cluster

apiVersion: v1
kind: Secret
metadata:
  name: road-sign-secrets
  namespace: road-sign-ml
  labels:
    app: road-sign-ml
    component: secrets
type: Opaque
data:
  # Database URLs (base64 encoded)
  database_url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9yb2Fkc2lnbg==
  redis_url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==
  
  # AWS Credentials (base64 encoded)
  aws_access_key_id: WU9VUl9BV1NfQUNDRVNTX0tFWV9JRA==
  aws_secret_access_key: WU9VUl9BV1NfU0VDUkVUX0FDQ0VTU19LRVk=
  
  # JWT Secret
  jwt_secret: WU9VUl9KV1RfU0VDUkVUX0tFWQ==
  
  # API Keys
  github_token: WU9VUl9HSVRIVUJfVE9LRU4=
  dockerhub_token: WU9VUl9ET0NLRVJIVUJfVE9LRU4=
  
  # Encryption keys
  encryption_key: WU9VUl9FTkNSWVBUSU9OX0tFWQ==

---
apiVersion: v1
kind: Secret
metadata:
  name: mlflow-secrets
  namespace: road-sign-ml
  labels:
    app: mlflow
    component: secrets
type: Opaque
data:
  # PostgreSQL credentials (base64 encoded)
  postgres_host: bWxmbG93LXBvc3RncmVzLXNlcnZpY2U=
  postgres_user: bWxmbG93
  postgres_password: bWxmbG93cGFzc3dvcmQ=
  postgres_db: bWxmbG93
  
  # AWS S3 credentials (base64 encoded) 
  aws_access_key_id: WU9VUl9BV1NfQUNDRVNTX0tFWV9JRA==
  aws_secret_access_key: WU9VUl9BV1NfU0VDUkVUX0FDQ0VTU19LRVk=

---
apiVersion: v1
kind: Secret
metadata:
  name: dockerhub-secret
  namespace: road-sign-ml
  labels:
    app: road-sign-ml
    component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJZT1VSX0RPQ0tFUkhVQl9VU0VSTkFNRSIsInBhc3N3b3JkIjoiWU9VUl9ET0NLRVJIVUJfUEFTU1dPUkQiLCJhdXRoIjoiV1c5VlVsOUVUME5MUlZKSVZVSmZWVk5GVWs1QlRVVTZXVTlWVWw5RVQwTkxSVkpJVlVKZlVFRlRVMWRQVWtRPSJ9fX0=

---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: road-sign-ml
  labels:
    app: road-sign-ml
    component: monitoring
type: Opaque
data:
  # Basic auth for monitoring endpoints (admin:password)
  auth: YWRtaW46JGFwcjEkSDZ1c2g5RzMkOGNUUVhPeEt6am8vVjJlRHNtMzI4MA==

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: road-sign-ml
  labels:
    app: road-sign-ml
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...

---
# Template for external secrets (using External Secrets Operator)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: road-sign-ml
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        secretRef:
          accessKeyID:
            name: aws-credentials
            key: access-key-id
          secretAccessKey:
            name: aws-credentials
            key: secret-access-key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: road-sign-external-secrets
  namespace: road-sign-ml
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: road-sign-secrets
    creationPolicy: Owner
  data:
    - secretKey: database_url
      remoteRef:
        key: road-sign-ml/database-url
    - secretKey: aws_access_key_id
      remoteRef:
        key: road-sign-ml/aws-access-key-id
    - secretKey: aws_secret_access_key
      remoteRef:
        key: road-sign-ml/aws-secret-access-key
